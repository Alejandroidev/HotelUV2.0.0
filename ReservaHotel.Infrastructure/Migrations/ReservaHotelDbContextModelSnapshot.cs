// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReservaHotel.Infrastructure.Persistence;

#nullable disable

namespace ReservaHotel.Infrastructure.Migrations
{
    [DbContext(typeof(ReservaHotelDbContext))]
    partial class ReservaHotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.EstadoReserva", b =>
                {
                    b.Property<int>("IdEstadoReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEstadoReserva"));

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdEstadoReserva");

                    b.ToTable("EstadoReserva");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Habitacion", b =>
                {
                    b.Property<int>("IdHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdHabitacion"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<int>("IdTipoHabitacion")
                        .HasColumnType("integer");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Piso")
                        .HasColumnType("integer");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdHabitacion");

                    b.HasIndex("IdTipoHabitacion");

                    b.ToTable("Habitacion");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Itinerario", b =>
                {
                    b.Property<int>("IdItinerario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdItinerario"));

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdReserva")
                        .HasColumnType("integer");

                    b.HasKey("IdItinerario");

                    b.HasIndex("IdReserva")
                        .IsUnique();

                    b.ToTable("Itinerarios");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReserva"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int>("IdEstadoReserva")
                        .HasColumnType("integer");

                    b.Property<int>("IdHabitacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuarioSistema")
                        .HasColumnType("integer");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstadoReserva");

                    b.HasIndex("IdHabitacion");

                    b.HasIndex("IdUsuarioSistema");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.TipoHabitacion", b =>
                {
                    b.Property<int>("IdTipoHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTipoHabitacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdTipoHabitacion");

                    b.ToTable("TipoHabitacion");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.UsuarioSistema", b =>
                {
                    b.Property<int>("IdUsuarioSistema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuarioSistema"));

                    b.Property<string>("ClaveHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdUsuarioSistema");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Habitacion", b =>
                {
                    b.HasOne("ReservaHotel.Domain.Entities.TipoHabitacion", "TipoHabitacion")
                        .WithMany("Habitaciones")
                        .HasForeignKey("IdTipoHabitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoHabitacion");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Itinerario", b =>
                {
                    b.HasOne("ReservaHotel.Domain.Entities.Reserva", "Reserva")
                        .WithOne("Itinerario")
                        .HasForeignKey("ReservaHotel.Domain.Entities.Itinerario", "IdReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("ReservaHotel.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservaHotel.Domain.Entities.EstadoReserva", "EstadoReserva")
                        .WithMany("Reservas")
                        .HasForeignKey("IdEstadoReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservaHotel.Domain.Entities.Habitacion", "Habitacion")
                        .WithMany("Reservas")
                        .HasForeignKey("IdHabitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservaHotel.Domain.Entities.UsuarioSistema", "UsuarioSistema")
                        .WithMany("ReservasRegistradas")
                        .HasForeignKey("IdUsuarioSistema")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoReserva");

                    b.Navigation("Habitacion");

                    b.Navigation("UsuarioSistema");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.EstadoReserva", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Habitacion", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.Reserva", b =>
                {
                    b.Navigation("Itinerario")
                        .IsRequired();
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.TipoHabitacion", b =>
                {
                    b.Navigation("Habitaciones");
                });

            modelBuilder.Entity("ReservaHotel.Domain.Entities.UsuarioSistema", b =>
                {
                    b.Navigation("ReservasRegistradas");
                });
#pragma warning restore 612, 618
        }
    }
}
